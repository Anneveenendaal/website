<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automation and Workflows on My New Hugo Site</title>
    <link>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/</link>
    <description>Recent content in Automation and Workflows on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Nov 2020 22:01:14 +0530</lastBuildDate><atom:link href="https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Command Line Tools</title>
      <link>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/commandline/</link>
      <pubDate>Wed, 11 Nov 2020 22:02:51 +0530</pubDate>
      
      <guid>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/commandline/</guid>
      <description>A command-line interface or command language interpreter (CLI), also known as a terminal, is a means of interacting with a computer program where the user issues commands to the program in the form of successive lines of text (command lines).
Throughout the course we will emphasize use of the terminal and executing commands within it as our modus operandi.
Windows Users So that we can work as closely as possible to the Mac and Linux users we will install Cygwin.</description>
    </item>
    
    <item>
      <title>Automation with GNU Make</title>
      <link>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/make/</link>
      <pubDate>Wed, 11 Nov 2020 22:02:51 +0530</pubDate>
      
      <guid>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/make/</guid>
      <description>Overview Make is a &amp;ldquo;build tool&amp;rdquo;, allowing us to control the execution of a set of command line statements to assemble pipelines that define what gets executed when. Using make, our entire workflow becomes transparent and reproducible.
Tip Why Build Tools?
Imagine you have built a complex project, consisting of dozens of datafiles and scripts. Also imagine you haven&amp;rsquo;t worked on the project for a few weeks, and now wish to continue your work where you left off.</description>
    </item>
    
    <item>
      <title>Snakemake</title>
      <link>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/snakemake/</link>
      <pubDate>Wed, 11 Nov 2020 22:02:51 +0530</pubDate>
      
      <guid>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/snakemake/</guid>
      <description>Snakemake is an easy to use workflow management system. Contrary to make, which was designed by computer scientists to build software, snakemake was designed for academic/professional research in Bioinformatics, so it may feel more intuitive for academic users.
Snakemake is a python package - so we can install using the default python installer, pip.
Mac &amp;amp; Linux Users: In a terminal window enter the command:
pip install snakemake followed by pressing the Return key.</description>
    </item>
    
    <item>
      <title>Making Path Settings Permanent</title>
      <link>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/environment-variables/</link>
      <pubDate>Wed, 11 Nov 2020 22:02:51 +0530</pubDate>
      
      <guid>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/environment-variables/</guid>
      <description>For our workflow be be command line driven, we need to be able to call software from the command line. Whilst much of the software we have installed as automatically made this possible, it is not universally the case. Here we will make the extra few changes we need to complete the installation guide.
Windows Users (for Windows 8 and 10) You will need local administration rights for your computer, but you should have these on your personal computers or ones owned by the Department.</description>
    </item>
    
    <item>
      <title>TeamViewer</title>
      <link>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/teamviewer/</link>
      <pubDate>Wed, 11 Nov 2020 22:02:51 +0530</pubDate>
      
      <guid>https://tsh-website.netlify.app/building-blocks/configure-your-computer/automation-and-workflows/teamviewer/</guid>
      <description>Getting feedback on code or solving technical problems is crucial to your learning experience. When working remotely, we prefer to make use of Teamviewer, which allows us to remote-control your computer and help you right away (while you&amp;rsquo;re watching, of course!).
Installing Teamviewer To install TeamViewer, go to the TeamViewer homepage and download the installer for your operating system. We recommend you to install Teamviewer permanently. If you do not have admin rights, it&amp;rsquo;s fine to only select run once.</description>
    </item>
    
  </channel>
</rss>
